{"ast":null,"code":"import { withParameters } from '@luma.gl/core';\nimport { _LayersPass as LayersPass } from '@deck.gl/core';\nexport default class CollisionFilterPass extends LayersPass {\n  renderCollisionMap(target, options) {\n    const gl = this.gl;\n    const padding = 1;\n    return withParameters(gl, {\n      scissorTest: true,\n      scissor: [padding, padding, target.width - 2 * padding, target.height - 2 * padding],\n      clearColor: [0, 0, 0, 0],\n      blend: false,\n      depthTest: true,\n      depthRange: [0, 1]\n    }, () => this.render({\n      ...options,\n      target,\n      pass: 'collision'\n    }));\n  }\n  getModuleParameters() {\n    return {\n      drawToCollisionMap: true,\n      pickingActive: 1,\n      pickingAttribute: false,\n      lightSources: {}\n    };\n  }\n}","map":{"version":3,"names":["withParameters","_LayersPass","LayersPass","CollisionFilterPass","renderCollisionMap","target","options","gl","padding","scissorTest","scissor","width","height","clearColor","blend","depthTest","depthRange","render","pass","getModuleParameters","drawToCollisionMap","pickingActive","pickingAttribute","lightSources"],"sources":["../../../src/collision-filter/collision-filter-pass.ts"],"sourcesContent":["import {Framebuffer, withParameters} from '@luma.gl/core';\nimport {_LayersPass as LayersPass, LayersPassRenderOptions} from '@deck.gl/core';\n\ntype CollisionFilterPassRenderOptions = LayersPassRenderOptions & {};\n\nexport default class CollisionFilterPass extends LayersPass {\n  renderCollisionMap(target: Framebuffer, options: CollisionFilterPassRenderOptions) {\n    const gl = this.gl;\n\n    const padding = 1;\n\n    return withParameters(\n      gl,\n      {\n        scissorTest: true,\n        scissor: [padding, padding, target.width - 2 * padding, target.height - 2 * padding],\n        clearColor: [0, 0, 0, 0],\n        blend: false,\n        depthTest: true,\n        depthRange: [0, 1]\n      },\n      () => this.render({...options, target, pass: 'collision'})\n    );\n  }\n\n  getModuleParameters() {\n    // Draw picking colors into collision FBO\n    return {\n      drawToCollisionMap: true,\n      pickingActive: 1,\n      pickingAttribute: false,\n      lightSources: {}\n    };\n  }\n}\n"],"mappings":"AAAA,SAAqBA,cAArB,QAA0C,eAA1C;AACA,SAAQC,WAAW,IAAIC,UAAvB,QAAiE,eAAjE;AAIA,eAAe,MAAMC,mBAAN,SAAkCD,UAAlC,CAA6C;EAC1DE,kBAAkBA,CAACC,MAAD,EAAsBC,OAAtB,EAAiE;IACjF,MAAMC,EAAE,GAAG,KAAKA,EAAhB;IAEA,MAAMC,OAAO,GAAG,CAAhB;IAEA,OAAOR,cAAc,CACnBO,EADmB,EAEnB;MACEE,WAAW,EAAE,IADf;MAEEC,OAAO,EAAE,CAACF,OAAD,EAAUA,OAAV,EAAmBH,MAAM,CAACM,KAAP,GAAe,IAAIH,OAAtC,EAA+CH,MAAM,CAACO,MAAP,GAAgB,IAAIJ,OAAnE,CAFX;MAGEK,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHd;MAIEC,KAAK,EAAE,KAJT;MAKEC,SAAS,EAAE,IALb;MAMEC,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ;IANd,CAFmB,EAUnB,MAAM,KAAKC,MAAL,CAAY;MAAC,GAAGX,OAAJ;MAAaD,MAAb;MAAqBa,IAAI,EAAE;IAA3B,CAAZ,CAVa,CAArB;EAYD;EAEDC,mBAAmBA,CAAA,EAAG;IAEpB,OAAO;MACLC,kBAAkB,EAAE,IADf;MAELC,aAAa,EAAE,CAFV;MAGLC,gBAAgB,EAAE,KAHb;MAILC,YAAY,EAAE;IAJT,CAAP;EAMD;AA5ByD"},"metadata":{},"sourceType":"module"}