{"ast":null,"code":"var _jsxFileName = \"/Users/stefanhall/Documents/Employment/Zoomo/Git/repos/fms-dashboard-dev/src/Map.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries\nimport React, { useRef, useEffect, useState } from 'react'; // React libraries\nimport mapboxgl from 'mapbox-gl'; // Mapbox GL JS library\n\n// Import data sources\nimport parksData from './sydney-parks.json'; // Parks data JSON\nimport vehicleData from './vehicleData.json'; // Vehicle data JSON\n\n// Import CSS\nimport './Map.css';\n\n// Set Mapbox token \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1Ijoic3RlZmFuZHMiLCJhIjoiY2xpbDhieGVsMDJ6cDNkcnRlZHd1Mm9oMCJ9.e2hVvAkDhSwaGmT9jCl83w';\n\n// Main functional component\nexport default function App() {\n  _s();\n  // Use a React ref to manage the map container DOM element and keep the map object\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // Use React useState to manage the map's popup state\n  const [popup, setPopup] = useState(null);\n\n  // Calculate the bounding box of the vehicles data to set the map's initial view\n  const minLat = Math.min(...vehicleData.map(data => data.lat));\n  const maxLat = Math.max(...vehicleData.map(data => data.lat));\n  const minLon = Math.min(...vehicleData.map(data => data.lon));\n  const maxLon = Math.max(...vehicleData.map(data => data.lon));\n\n  // Bounding box, in [minLon, minLat], [maxLon, maxLat] format\n  const boundingBox = [[minLon, minLat], [maxLon, maxLat]];\n\n  // On component mount, initialize the map\n  useEffect(() => {\n    // If the map is already initialized, return out\n    if (map.current) return;\n\n    // Create a new map instance\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      // Container element\n      style: 'mapbox://styles/mapbox/streets-v12',\n      // Map style\n      interactive: true // Enables map interactivity\n    });\n\n    // Once the map has loaded...\n    map.current.on('load', () => {\n      // Set the map's bounds to the vehicle data bounding box with a little padding\n      map.current.fitBounds(boundingBox, {\n        padding: 20\n      });\n\n      // For each park in the parks data...\n      parksData.features.forEach(park => {\n        // Create a DOM element for the park marker\n        const parkEl = document.createElement('div');\n        parkEl.className = 'marker';\n\n        // Create a popup for the park marker with park's name and description\n        const parkPopup = new mapboxgl.Popup({\n          offset: 25\n        }).setHTML(`\n            <h3>${park.properties.title}</h3>\n            <p>${park.properties.description}</p>\n          `);\n\n        // Create and add the park marker to the map\n        new mapboxgl.Marker().setLngLat(park.geometry.coordinates).setPopup(parkPopup).addTo(map.current);\n\n        // Add event listeners to show and hide the popup\n        parkEl.addEventListener('mouseenter', () => parkPopup.addTo(map.current));\n        parkEl.addEventListener('mouseleave', () => parkPopup.remove());\n      });\n\n      // For each vehicle in the vehicles data...\n      vehicleData.forEach(vehicle => {\n        // Create a DOM element for the vehicle marker\n        var el = document.createElement('div');\n        el.className = 'marker ' + vehicle.status;\n\n        // Create a popup for the vehicle marker with vehicle's information\n        const vehiclePopup = new mapboxgl.Popup({\n          offset: 25\n        }).setHTML(`\n            <h3>${vehicle.ZID}</h3>\n            <p>Status: ${vehicle.status}</p>\n            <p>Home: ${vehicle.home}</p>\n          `);\n\n        // Create and add the vehicle marker to the map\n        var marker = new mapboxgl.Marker(el).setLngLat([vehicle.lon, vehicle.lat]).setPopup(vehiclePopup).addTo(map.current);\n\n        // Add event listeners to show and hide the popup and set the popup state\n        el.addEventListener('mouseenter', () => vehiclePopup.addTo(map.current));\n        el.addEventListener('mouseleave', () => {\n          if (popup !== vehiclePopup) {\n            vehiclePopup.remove();\n          }\n        });\n        el.addEventListener('click', () => {\n          if (popup) {\n            popup.remove();\n          }\n          setPopup(vehiclePopup);\n        });\n      });\n    });\n\n    // Cleanup on component unmount\n    return () => map.current.remove();\n  }, []);\n\n  // Render the map container\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lTVGjOxmakqjbMq29oTwstayFxk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","parksData","vehicleData","jsxDEV","_jsxDEV","accessToken","App","_s","mapContainer","map","popup","setPopup","minLat","Math","min","data","lat","maxLat","max","minLon","lon","maxLon","boundingBox","current","Map","container","style","interactive","on","fitBounds","padding","features","forEach","park","parkEl","document","createElement","className","parkPopup","Popup","offset","setHTML","properties","title","description","Marker","setLngLat","geometry","coordinates","addTo","addEventListener","remove","vehicle","el","status","vehiclePopup","ZID","home","marker","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stefanhall/Documents/Employment/Zoomo/Git/repos/fms-dashboard-dev/src/Map.js"],"sourcesContent":["// Import necessary libraries\nimport React, { useRef, useEffect, useState } from 'react'; // React libraries\nimport mapboxgl from 'mapbox-gl'; // Mapbox GL JS library\n\n// Import data sources\nimport parksData from './sydney-parks.json'; // Parks data JSON\nimport vehicleData from './vehicleData.json'; // Vehicle data JSON\n\n// Import CSS\nimport './Map.css';\n\n// Set Mapbox token \nmapboxgl.accessToken = 'pk.eyJ1Ijoic3RlZmFuZHMiLCJhIjoiY2xpbDhieGVsMDJ6cDNkcnRlZHd1Mm9oMCJ9.e2hVvAkDhSwaGmT9jCl83w';\n\n// Main functional component\nexport default function App() {\n\n  // Use a React ref to manage the map container DOM element and keep the map object\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // Use React useState to manage the map's popup state\n  const [popup, setPopup] = useState(null);\n\n  // Calculate the bounding box of the vehicles data to set the map's initial view\n  const minLat = Math.min(...vehicleData.map(data => data.lat));\n  const maxLat = Math.max(...vehicleData.map(data => data.lat));\n  const minLon = Math.min(...vehicleData.map(data => data.lon));\n  const maxLon = Math.max(...vehicleData.map(data => data.lon));\n\n  // Bounding box, in [minLon, minLat], [maxLon, maxLat] format\n  const boundingBox = [[minLon, minLat], [maxLon, maxLat]];\n\n  // On component mount, initialize the map\n  useEffect(() => {\n    // If the map is already initialized, return out\n    if (map.current) return;\n\n    // Create a new map instance\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current, // Container element\n      style: 'mapbox://styles/mapbox/streets-v12', // Map style\n      interactive: true // Enables map interactivity\n    });\n\n    // Once the map has loaded...\n    map.current.on('load', () => {\n      // Set the map's bounds to the vehicle data bounding box with a little padding\n      map.current.fitBounds(boundingBox, { padding: 20 });\n\n      // For each park in the parks data...\n      parksData.features.forEach((park) => {\n        // Create a DOM element for the park marker\n        const parkEl = document.createElement('div');\n        parkEl.className = 'marker';\n\n        // Create a popup for the park marker with park's name and description\n        const parkPopup = new mapboxgl.Popup({ offset: 25 })\n          .setHTML(`\n            <h3>${park.properties.title}</h3>\n            <p>${park.properties.description}</p>\n          `);\n\n        // Create and add the park marker to the map\n        new mapboxgl.Marker()\n          .setLngLat(park.geometry.coordinates)\n          .setPopup(parkPopup)\n          .addTo(map.current);\n        \n        // Add event listeners to show and hide the popup\n        parkEl.addEventListener('mouseenter', () => parkPopup.addTo(map.current));\n        parkEl.addEventListener('mouseleave', () => parkPopup.remove());\n      });\n\n      // For each vehicle in the vehicles data...\n      vehicleData.forEach(vehicle => {\n        // Create a DOM element for the vehicle marker\n        var el = document.createElement('div');\n        el.className = 'marker ' + vehicle.status;\n\n        // Create a popup for the vehicle marker with vehicle's information\n        const vehiclePopup = new mapboxgl.Popup({ offset: 25 })\n          .setHTML(`\n            <h3>${vehicle.ZID}</h3>\n            <p>Status: ${vehicle.status}</p>\n            <p>Home: ${vehicle.home}</p>\n          `);\n\n        // Create and add the vehicle marker to the map\n        var marker = new mapboxgl.Marker(el)\n          .setLngLat([vehicle.lon, vehicle.lat])\n          .setPopup(vehiclePopup)\n          .addTo(map.current);\n\n        // Add event listeners to show and hide the popup and set the popup state\n        el.addEventListener('mouseenter', () => vehiclePopup.addTo(map.current));\n        el.addEventListener('mouseleave', () => {\n          if (popup !== vehiclePopup) {\n            vehiclePopup.remove();\n          }\n        });\n        el.addEventListener('click', () => {\n          if (popup) {\n            popup.remove();\n          }\n          setPopup(vehiclePopup);\n        });\n      });\n    });\n\n    // Cleanup on component unmount\n    return () => map.current.remove();\n  }, []);\n\n  // Render the map container\n  return (\n    <div>\n      <div ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}