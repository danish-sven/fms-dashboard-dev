{"ast":null,"code":"import { withParameters } from '@luma.gl/gltools';\nexport default class Display {\n  constructor() {\n    this.animationLoop = null;\n  }\n  getViews(options) {\n    const {\n      width,\n      height\n    } = options;\n    return [{\n      params: {\n        viewport: [0, 0, width, height],\n        scissor: [0, 0, width, height],\n        scissorTest: true\n      }\n    }];\n  }\n  submitFrame() {\n    return true;\n  }\n  requestAnimationFrame(renderFrame) {\n    return false;\n  }\n  delete() {}\n  _renderFrame(options) {\n    const views = this.getViews(options);\n    if (!views) {\n      return false;\n    }\n    const {\n      gl\n    } = this.animationLoop;\n    for (const view of views) {\n      withParameters(gl, view.params, () => this.animationLoop.onRender({\n        ...options,\n        ...view\n      }));\n    }\n    this.submitFrame();\n    return true;\n  }\n}","map":{"version":3,"names":["withParameters","Display","constructor","animationLoop","getViews","options","width","height","params","viewport","scissor","scissorTest","submitFrame","requestAnimationFrame","renderFrame","delete","_renderFrame","views","gl","view","onRender"],"sources":["../../../src/webvr/display.js"],"sourcesContent":["import {withParameters} from '@luma.gl/gltools';\n\nexport default class Display {\n  constructor() {\n    // TODO\n    this.animationLoop = null;\n  }\n\n  getViews(options) {\n    const {width, height} = options;\n    return [\n      {\n        params: {\n          viewport: [0, 0, width, height],\n          scissor: [0, 0, width, height],\n          scissorTest: true\n        }\n      }\n    ];\n  }\n\n  submitFrame() {\n    return true;\n  }\n\n  // return true if animation frame has been requested\n  requestAnimationFrame(renderFrame) {\n    return false;\n  }\n\n  delete() {}\n\n  // AnimationLoop calls this API\n  _renderFrame(options) {\n    const views = this.getViews(options);\n    if (!views) {\n      return false;\n    }\n\n    const {gl} = this.animationLoop;\n    for (const view of views) {\n      withParameters(gl, view.params, () => this.animationLoop.onRender({...options, ...view}));\n    }\n\n    this.submitFrame();\n    return true;\n  }\n}\n"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AAEA,eAAe,MAAMC,OAAN,CAAc;EAC3BC,WAAWA,CAAA,EAAG;IAEZ,KAAKC,aAAL,GAAqB,IAArB;EACD;EAEDC,QAAQA,CAACC,OAAD,EAAU;IAChB,MAAM;MAACC,KAAD;MAAQC;IAAR,IAAkBF,OAAxB;IACA,OAAO,CACL;MACEG,MAAM,EAAE;QACNC,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOH,KAAP,EAAcC,MAAd,CADJ;QAENG,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOJ,KAAP,EAAcC,MAAd,CAFH;QAGNI,WAAW,EAAE;MAHP;IADV,CADK,CAAP;EASD;EAEDC,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAP;EACD;EAGDC,qBAAqBA,CAACC,WAAD,EAAc;IACjC,OAAO,KAAP;EACD;EAEDC,MAAMA,CAAA,EAAG,CAAE;EAGXC,YAAYA,CAACX,OAAD,EAAU;IACpB,MAAMY,KAAK,GAAG,KAAKb,QAAL,CAAcC,OAAd,CAAd;IACA,IAAI,CAACY,KAAL,EAAY;MACV,OAAO,KAAP;IACD;IAED,MAAM;MAACC;IAAD,IAAO,KAAKf,aAAlB;IACA,KAAK,MAAMgB,IAAX,IAAmBF,KAAnB,EAA0B;MACxBjB,cAAc,CAACkB,EAAD,EAAKC,IAAI,CAACX,MAAV,EAAkB,MAAM,KAAKL,aAAL,CAAmBiB,QAAnB,CAA4B;QAAC,GAAGf,OAAJ;QAAa,GAAGc;MAAhB,CAA5B,CAAxB,CAAd;IACD;IAED,KAAKP,WAAL;IACA,OAAO,IAAP;EACD;AA5C0B"},"metadata":{},"sourceType":"module"}