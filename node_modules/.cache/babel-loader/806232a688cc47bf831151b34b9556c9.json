{"ast":null,"code":"function getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\nexport class LocalStorage {\n  constructor(id, defaultConfig) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'sessionStorage';\n    this.storage = void 0;\n    this.id = void 0;\n    this.config = void 0;\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n  getConfiguration() {\n    return this.config;\n  }\n  setConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}","map":{"version":3,"names":["getStorage","type","storage","window","x","setItem","removeItem","e","LocalStorage","constructor","id","defaultConfig","arguments","length","undefined","config","_loadConfiguration","getConfiguration","setConfiguration","configuration","Object","assign","serialized","JSON","stringify","serializedConfiguration","getItem","parse"],"sources":["../../src/utils/local-storage.ts"],"sourcesContent":["// probe.gl, MIT license\n\nexport type StorageType = 'sessionStorage' | 'localStorage';\n\nfunction getStorage(type: StorageType): Storage | null {\n  try {\n    const storage: Storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\n// Store keys in local storage via simple interface\nexport class LocalStorage<Configuration extends {}> {\n  storage: Storage | null;\n  id: string;\n  config: Required<Configuration>;\n\n  constructor(\n    id: string,\n    defaultConfig: Required<Configuration>,\n    type: StorageType = 'sessionStorage'\n  ) {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = defaultConfig;\n    this._loadConfiguration();\n  }\n\n  getConfiguration(): Required<Configuration> {\n    return this.config;\n  }\n\n  setConfiguration(configuration: Configuration): void {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n  }\n\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}\n"],"mappings":"AAIA,SAASA,UAATA,CAAoBC,IAApB,EAAuD;EACrD,IAAI;IACF,MAAMC,OAAgB,GAAGC,MAAM,CAACF,IAAD,CAA/B;IACA,MAAMG,CAAC,GAAG,kBAAV;IACAF,OAAO,CAACG,OAAR,CAAgBD,CAAhB,EAAmBA,CAAnB;IACAF,OAAO,CAACI,UAAR,CAAmBF,CAAnB;IACA,OAAOF,OAAP;EACD,CAND,CAME,OAAOK,CAAP,EAAU;IACV,OAAO,IAAP;EACD;AACF;AAGD,OAAO,MAAMC,YAAN,CAA6C;EAKlDC,WAAWA,CACTC,EADS,EAETC,aAFS,EAIT;IAAA,IADAV,IACA,GAAAW,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADoB,gBACpB;IAAA,KARFV,OAQE;IAAA,KAPFQ,EAOE;IAAA,KANFK,MAME;IACA,KAAKb,OAAL,GAAeF,UAAU,CAACC,IAAD,CAAzB;IACA,KAAKS,EAAL,GAAUA,EAAV;IACA,KAAKK,MAAL,GAAcJ,aAAd;IACA,KAAKK,kBAAL;EACD;EAEDC,gBAAgBA,CAAA,EAA4B;IAC1C,OAAO,KAAKF,MAAZ;EACD;EAEDG,gBAAgBA,CAACC,aAAD,EAAqC;IACnDC,MAAM,CAACC,MAAP,CAAc,KAAKN,MAAnB,EAA2BI,aAA3B;IACA,IAAI,KAAKjB,OAAT,EAAkB;MAChB,MAAMoB,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKT,MAApB,CAAnB;MACA,KAAKb,OAAL,CAAaG,OAAb,CAAqB,KAAKK,EAA1B,EAA8BY,UAA9B;IACD;EACF;EAGDN,kBAAkBA,CAAA,EAAG;IACnB,IAAIG,aAAa,GAAG,EAApB;IACA,IAAI,KAAKjB,OAAT,EAAkB;MAChB,MAAMuB,uBAAuB,GAAG,KAAKvB,OAAL,CAAawB,OAAb,CAAqB,KAAKhB,EAA1B,CAAhC;MACAS,aAAa,GAAGM,uBAAuB,GAAGF,IAAI,CAACI,KAAL,CAAWF,uBAAX,CAAH,GAAyC,EAAhF;IACD;IACDL,MAAM,CAACC,MAAP,CAAc,KAAKN,MAAnB,EAA2BI,aAA3B;IACA,OAAO,IAAP;EACD;AArCiD"},"metadata":{},"sourceType":"module"}