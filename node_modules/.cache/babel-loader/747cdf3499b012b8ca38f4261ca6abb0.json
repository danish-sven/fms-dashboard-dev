{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport { getGeohashPolygon } from './geohash-utils';\nconst defaultProps = {\n  getGeohash: {\n    type: 'accessor',\n    value: d => d.geohash\n  }\n};\nexport default class GeohashLayer extends GeoCellLayer {\n  indexToBounds() {\n    const {\n      data,\n      getGeohash\n    } = this.props;\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\n_defineProperty(GeohashLayer, \"layerName\", 'GeohashLayer');\n_defineProperty(GeohashLayer, \"defaultProps\", defaultProps);","map":{"version":3,"names":["GeoCellLayer","getGeohashPolygon","defaultProps","getGeohash","type","value","d","geohash","GeohashLayer","indexToBounds","data","props","_normalize","positionFormat","getPolygon","x","objectInfo"],"sources":["../../../src/geohash-layer/geohash-layer.ts"],"sourcesContent":["import {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport {getGeohashPolygon} from './geohash-utils';\n\nconst defaultProps: DefaultProps<GeohashLayerProps> = {\n  getGeohash: {type: 'accessor', value: d => d.geohash}\n};\n\n/**\n * Properties of `GeohashLayer`.\n */\ntype GeohashLayerProps<DataT = any> = {\n  /**\n   * Called for each data object to retrieve the geohash string identifier.\n   *\n   * By default, it reads `geohash` property of data object.\n   */\n  getGeohash?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nexport default class GeohashLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<GeohashLayerProps> & ExtraProps\n> {\n  static layerName = 'GeohashLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getGeohash} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\n"],"mappings":";AACA,OAAOA,YAAP,MAAyB,gCAAzB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;AAEA,MAAMC,YAA6C,GAAG;EACpDC,UAAU,EAAE;IAACC,IAAI,EAAE,UAAP;IAAmBC,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC;EAAjC;AADwC,CAAtD;AAiBA,eAAe,MAAMC,YAAN,SAAoER,YAApE,CAGb;EAIAS,aAAaA,CAAA,EAA0C;IACrD,MAAM;MAACC,IAAD;MAAOP;IAAP,IAAqB,KAAKQ,KAAhC;IAEA,OAAO;MACLD,IADK;MAELE,UAAU,EAAE,KAFP;MAGLC,cAAc,EAAE,IAHX;MAILC,UAAU,EAAEA,CAACC,CAAD,EAAWC,UAAX,KAA0Bf,iBAAiB,CAACE,UAAU,CAACY,CAAD,EAAIC,UAAJ,CAAX;IAJlD,CAAP;EAMD;AAbD;gBAHmBR,Y,eAIA,c;gBAJAA,Y,kBAKGN,Y"},"metadata":{},"sourceType":"module"}