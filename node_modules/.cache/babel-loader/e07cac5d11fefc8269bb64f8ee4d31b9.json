{"ast":null,"code":"import { getOSMTileIndices } from './tile-2d-traversal';\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\nexport const urlType = {\n  type: 'object',\n  value: null,\n  validate: (value, propType) => propType.optional && value === null || typeof value === 'string' || Array.isArray(value) && value.every(url => typeof url === 'string'),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\nfunction transformBox(bbox, modelMatrix) {\n  const transformedCoords = [modelMatrix.transformAsPoint([bbox[0], bbox[1]]), modelMatrix.transformAsPoint([bbox[2], bbox[1]]), modelMatrix.transformAsPoint([bbox[0], bbox[3]]), modelMatrix.transformAsPoint([bbox[2], bbox[3]])];\n  const transformedBox = [Math.min(...transformedCoords.map(i => i[0])), Math.min(...transformedCoords.map(i => i[1])), Math.max(...transformedCoords.map(i => i[0])), Math.max(...transformedCoords.map(i => i[1]))];\n  return transformedBox;\n}\nfunction stringHash(s) {\n  return Math.abs(s.split('').reduce((a, b) => (a << 5) - a + b.charCodeAt(0) | 0, 0));\n}\nexport function getURLFromTemplate(template, tile) {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {\n    index,\n    id\n  } = tile;\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(\"{\".concat(key, \"}\"), 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\nfunction getBoundingBox(viewport, zRange, extent) {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({\n      z: minZ\n    });\n    const bounds1 = viewport.getBounds({\n      z: maxZ\n    });\n    bounds = [Math.min(bounds0[0], bounds1[0]), Math.min(bounds0[1], bounds1[1]), Math.max(bounds0[2], bounds1[2]), Math.max(bounds0[3], bounds1[3])];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [Math.max(Math.min(bounds[0], extent[2]), extent[0]), Math.max(Math.min(bounds[1], extent[3]), extent[1]), Math.min(Math.max(bounds[2], extent[0]), extent[2]), Math.min(Math.max(bounds[3], extent[1]), extent[3])];\n  }\n  return [Math.max(bounds[0], extent[0]), Math.max(bounds[1], extent[1]), Math.min(bounds[2], extent[2]), Math.min(bounds[3], extent[3])];\n}\nexport function getCullBounds(_ref) {\n  let {\n    viewport,\n    z = 0,\n    cullRect\n  } = _ref;\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z, cullRect));\n}\nfunction getCullBoundsInViewport(viewport, z, cullRect) {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {\n      width,\n      height\n    } = cullRect;\n    const unprojectOption = {\n      targetZ: z\n    };\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n    return [Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]), Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]), Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]), Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])];\n  }\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n  return [Math.min(bounds0[0], bounds1[0]), Math.min(bounds0[1], bounds1[1]), Math.max(bounds0[2], bounds1[2]), Math.max(bounds0[3], bounds1[3])];\n}\nfunction getIndexingCoords(bbox, scale, modelMatrixInverse) {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(i => i * scale / TILE_SIZE);\n    return transformedTileIndex;\n  }\n  return bbox.map(i => i * scale / TILE_SIZE);\n}\nfunction getScale(z, tileSize) {\n  return Math.pow(2, z) * TILE_SIZE / tileSize;\n}\nexport function osmTile2lngLat(x, y, z) {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = x / scale * 360 - 180;\n  const n = Math.PI - 2 * Math.PI * y / scale;\n  const lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\nfunction tile2XY(x, y, z, tileSize) {\n  const scale = getScale(z, tileSize);\n  return [x / scale * TILE_SIZE, y / scale * TILE_SIZE];\n}\nexport function tileToBoundingBox(viewport, x, y, z) {\n  let tileSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : TILE_SIZE;\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {\n      west,\n      north,\n      east,\n      south\n    };\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction getIdentityTileIndices(viewport, z, tileSize, extent, modelMatrixInverse) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices = [];\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({\n        x,\n        y,\n        z\n      });\n    }\n  }\n  return indices;\n}\nexport function getTileIndices(_ref2) {\n  let {\n    viewport,\n    maxZoom,\n    minZoom,\n    zRange,\n    extent,\n    tileSize = TILE_SIZE,\n    modelMatrix,\n    modelMatrixInverse,\n    zoomOffset = 0\n  } = _ref2;\n  let z = viewport.isGeospatial ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial ? getOSMTileIndices(viewport, z, zRange, extent) : getIdentityTileIndices(viewport, z, tileSize, transformedExtent || DEFAULT_EXTENT, modelMatrixInverse);\n}\nexport function isURLTemplate(s) {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\nexport function isGeoBoundingBox(v) {\n  return Number.isFinite(v.west) && Number.isFinite(v.north) && Number.isFinite(v.east) && Number.isFinite(v.south);\n}","map":{"version":3,"names":["getOSMTileIndices","TILE_SIZE","DEFAULT_EXTENT","Infinity","urlType","type","value","validate","propType","optional","Array","isArray","every","url","equal","value1","value2","len","length","i","transformBox","bbox","modelMatrix","transformedCoords","transformAsPoint","transformedBox","Math","min","map","max","stringHash","s","abs","split","reduce","a","b","charCodeAt","getURLFromTemplate","template","tile","index","id","key","Object","keys","regex","RegExp","concat","replace","String","Number","isInteger","y","z","pow","getBoundingBox","viewport","zRange","extent","bounds","minZ","maxZ","bounds0","getBounds","bounds1","isGeospatial","getCullBounds","_ref","cullRect","subViewports","v","getCullBoundsInViewport","x","width","height","unprojectOption","targetZ","topLeft","unproject","topRight","bottomLeft","bottomRight","getIndexingCoords","scale","modelMatrixInverse","transformedTileIndex","getScale","tileSize","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","arguments","undefined","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","minX","minY","maxX","maxY","indices","floor","push","getTileIndices","_ref2","maxZoom","minZoom","zoomOffset","round","zoom","log2","ceil","isFinite","transformedExtent","isURLTemplate","test","isGeoBoundingBox"],"sources":["../../../src/tileset-2d/utils.ts"],"sourcesContent":["import {Viewport} from '@deck.gl/core';\nimport {Matrix4} from '@math.gl/core';\nimport {getOSMTileIndices} from './tile-2d-traversal';\nimport {Bounds, GeoBoundingBox, TileBoundingBox, TileIndex, ZRange} from './types';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT: Bounds = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport type URLTemplate = string | string[] | null;\n\nexport const urlType = {\n  type: 'object' as const,\n  value: null as URLTemplate,\n  validate: (value, propType) =>\n    (propType.optional && value === null) ||\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nfunction transformBox(bbox: Bounds, modelMatrix: Matrix4): Bounds {\n  const transformedCoords = [\n    // top-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n    // top-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n    // bottom-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n    // bottom-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[3]])\n  ];\n  const transformedBox: Bounds = [\n    // Minimum x coord\n    Math.min(...transformedCoords.map(i => i[0])),\n    // Minimum y coord\n    Math.min(...transformedCoords.map(i => i[1])),\n    // Max x coord\n    Math.max(...transformedCoords.map(i => i[0])),\n    // Max y coord\n    Math.max(...transformedCoords.map(i => i[1]))\n  ];\n  return transformedBox;\n}\n\nfunction stringHash(s: string): number {\n  return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\n\nexport function getURLFromTemplate(\n  template: URLTemplate,\n  tile: {\n    index: TileIndex;\n    id: string;\n  }\n): string | null {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {index, id} = tile;\n\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(`{${key}}`, 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n\n  // Back-compatible support for {-y}\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport: Viewport, zRange: number[] | null, extent: Bounds): Bounds {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n      // Top corner should not be more then bottom corner in either direction\n      Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n      Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n      // Bottom corner should not be less then top corner in either direction\n      Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n      Math.min(Math.max(bounds[3], extent[1]), extent[3])\n    ];\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\n/** Get culling bounds in world space */\nexport function getCullBounds({\n  viewport,\n  z = 0,\n  cullRect\n}: {\n  /** Current viewport */\n  viewport: Viewport;\n  /** Current z range */\n  z: ZRange | number | undefined;\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number};\n}): [number, number, number, number][] {\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z, cullRect));\n}\n\nfunction getCullBoundsInViewport(\n  /** Current viewport */\n  viewport: Viewport,\n  /** At altitude */\n  z: ZRange | number,\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number}\n): [number, number, number, number] {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {width, height} = cullRect;\n\n    const unprojectOption = {targetZ: z};\n\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n\n  return [\n    Math.min(bounds0[0], bounds1[0]),\n    Math.min(bounds0[1], bounds1[1]),\n    Math.max(bounds0[2], bounds1[2]),\n    Math.max(bounds0[3], bounds1[3])\n  ];\n}\n\nfunction getIndexingCoords(bbox: Bounds, scale: number, modelMatrixInverse?: Matrix4): Bounds {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(\n      i => (i * scale) / TILE_SIZE\n    );\n    return transformedTileIndex as Bounds;\n  }\n  return bbox.map(i => (i * scale) / TILE_SIZE) as Bounds;\n}\n\nfunction getScale(z: number, tileSize: number): number {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x: number, y: number, z: number): [number, number] {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x: number, y: number, z: number, tileSize: number): [number, number] {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\nexport function tileToBoundingBox(\n  viewport: Viewport,\n  x: number,\n  y: number,\n  z: number,\n  tileSize: number = TILE_SIZE\n): TileBoundingBox {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(\n  viewport: Viewport,\n  z: number,\n  tileSize: number,\n  extent: Bounds,\n  modelMatrixInverse?: Matrix4\n) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices: TileIndex[] = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse,\n  zoomOffset = 0\n}: {\n  viewport: Viewport;\n  maxZoom?: number;\n  minZoom?: number;\n  zRange: ZRange | undefined;\n  extent?: Bounds;\n  tileSize?: number;\n  modelMatrix?: Matrix4;\n  modelMatrixInverse?: Matrix4;\n  zoomOffset?: number;\n}) {\n  let z = viewport.isGeospatial\n    ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset\n    : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent)\n    : getIdentityTileIndices(\n        viewport,\n        z,\n        tileSize,\n        transformedExtent || DEFAULT_EXTENT,\n        modelMatrixInverse\n      );\n}\n\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s: string): boolean {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\n\nexport function isGeoBoundingBox(v: any): v is GeoBoundingBox {\n  return (\n    Number.isFinite(v.west) &&\n    Number.isFinite(v.north) &&\n    Number.isFinite(v.east) &&\n    Number.isFinite(v.south)\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}